283. Move Zeroes

Given an integer array nums, move all 0's to the end of it while maintaining the relative order of the non-zero elements.

Note that you must do this in-place without making a copy of the array.

 

Example 1:

Input: nums = [0,1,0,3,12]
Output: [1,3,12,0,0]
Example 2:

Input: nums = [0]
Output: [0]

class Solution {
    public void moveZeroes(int[] nums) {
        /*int z = nums.length-1; //zeroPointer
        int n = 1; //numPointer
        int i = 0;
        int zVal
        while(i<nums.length){
            if(nums[n]!=0&nums[z]==0){
                if(z<n){
                    //swap
                    nums[z]=nums[n];
                    nums[n]=0;  
                }
                else n++;
            }
            else{
                if(nums[z]!=0) z++;
                else n++;
            }
            
        }*/


        int z =0; //zeroPointer
        int i = 0;
        //--find first zero;
        while(z<nums.length-1){
            if(nums[z]==0)
                break;
            z++;
        }//--
        i=z+1;
        
        while(i<nums.length){
            if(nums[i]!=0){
                //--swap
                nums[z]=nums[i];
                nums[i]=0;//--

                //-find next zero
                z++;
                while(z<i){
                    if(nums[z]==0){
                        break;
                    }
                    z++;
                }//-
            }
            i++;
        }
    }
}