459. Repeated Substring Pattern
Given a string s, check if it can be constructed by taking a substring of it and appending multiple copies of the substring together.

 

Example 1:

Input: s = "abab"
Output: true
Explanation: It is the substring "ab" twice.
Example 2:

Input: s = "aba"
Output: false
Example 3:

Input: s = "abcabcabcabc"
Output: true
Explanation: It is the substring "abc" four times or the substring "abcabc" twice.
 

Constraints:

1 <= s.length <= 104
s consists of lowercase English letters.


class Solution {
    public boolean repeatedSubstringPattern(String s) {
        if(s.length()==1) return false;
        if(s.length()==2 & s.charAt(0)!=s.charAt(1)) return false;
        int jump =1;
        int i = 0;
        
        while(i+jump<s.length()){
            if(jump>s.length()/2) return false;
            char c = s.charAt(i);
            char j = s.charAt(i+jump);
            if(c==j & s.length()%jump==0){
                i++;
            }
            else{
                jump++;
                i=0;
            }
        }
        return true;
    }
}