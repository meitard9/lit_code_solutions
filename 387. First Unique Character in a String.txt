387. First Unique Character in a String

Given a string s, find the first non-repeating character in it and return its index. If it does not exist, return -1.

 

Example 1:

Input: s = "leetcode"
Output: 0
Example 2:

Input: s = "loveleetcode"
Output: 2
Example 3:

Input: s = "aabb"
Output: -1
 

Constraints:

1 <= s.length <= 105
s consists of only lowercase English letters.


class Solution {
    public int firstUniqChar(String s) {
        char[] sArray = s.toCharArray();
        
        //each position simbolize the character in the alphabet in this position (0=a , 1=b ...). and the value is the times it apper.
        int[] alphabet = new int[26];
        
        int len = sArray.length;
        for(int i=0; i<len; i++) {
            alphabet[sArray[i]-'a']++;
        }
        for(int i=0; i<len; i++){
            if(alphabet[sArray[i]-'a']== 1)return i;
        }
        return -1;
    }
}