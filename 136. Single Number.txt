136. Single Number

Given a non-empty array of integers nums, every element appears twice except for one. Find that single one.

You must implement a solution with a linear runtime complexity and use only constant extra space.

class Solution {
    public int singleNumber(int[] nums) {
        HashMap<Integer, Integer> numCount = new HashMap<>(); // Use Integer for keys

    for (int num : nums) {
        numCount.put(num, numCount.getOrDefault(num, 0) + 1); // Use getOrDefault for safe access
    }

    for (Map.Entry<Integer, Integer> entry : numCount.entrySet()) {
        if (entry.getValue() == 1) {
            return entry.getKey();
        }
    }

    return -1; // Handle the case where no single number exists
    }
}