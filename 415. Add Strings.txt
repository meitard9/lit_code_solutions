415. Add Strings
Given two non-negative integers, num1 and num2 represented as string, return the sum of num1 and num2 as a string.

You must solve the problem without using any built-in library for handling large integers (such as BigInteger). You must also not convert the inputs to integers directly.

 

Example 1:

Input: num1 = "11", num2 = "123"
Output: "134"
Example 2:

Input: num1 = "456", num2 = "77"
Output: "533"
Example 3:

Input: num1 = "0", num2 = "0"
Output: "0"
 

Constraints:

1 <= num1.length, num2.length <= 104
num1 and num2 consist of only digits.
num1 and num2 don't have any leading zeros except for the zero itself.


class Solution {
    boolean carry = false;
    public String addStrings(String num1, String num2) {
        StringBuilder sum = new StringBuilder();
        char[] arr1 = num1.toCharArray();
        char[] arr2 = num2.toCharArray();
        int i = arr1.length-1;
        int j = arr2.length-1;
        while(i >=0 ||j>=0){
            sum.append(
                    sum(
                        getChar(arr1,i)
                        ,getChar(arr2,j)
                        ));
            i--;
            j--;
        }
        if(carry) sum.append('1');
        return sum.reverse().toString();

    }
    public char sum(char digit1,char digit2){
        int currCarry = carry ? 1 : 0;
        int sum = (digit1 - '0') + (digit2 - '0') +currCarry;
        carry = sum > 9;
        return ((char) (sum%10 + 48));
    }
    public char getChar(char[] arr, int index){
        return index >=0 ? arr[index] : '0';
    }
}